{"version":3,"sources":["i18n/i18n.ts","functions/home/AddRouteView.tsx","hooks/LazyGitHubAuthHook.tsx","functions/home/RouteEtaView.tsx","hooks/MomentHook.tsx","functions/home/HomeView.tsx","global/Routes.tsx","functions/LayoutView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","fallbackLng","interpolation","escapeValue","useStyles","makeStyles","theme","createStyles","root","backgroundColor","palette","background","default","onlyUnique","value","index","self","indexOf","getLocaleStopName","stop","lang","name_tc","name_sc","name_en","AddRouteView","props","data","stops","routeStops","routes","useTranslation","t","useTheme","React","addMode","setAddMode","route","setRoute","serviceType","setServiceType","direction","setDirection","seq","setSeq","routeStopList","filter","it","bound","service_type","sort","a","b","handleSubmit","onRouteAdded","routeNumber","Card","CardHeader","title","action","IconButton","onClick","CardContent","Autocomplete","onChange","event","newValue","options","map","getOptionLabel","renderInput","params","TextField","label","variant","fullWidth","dir","find","_","language","Button","color","style","alignContent","alignItems","LazyGitHubAuthContext","LazyGitHubAuthProvider","auth","setAuth","Provider","children","useLazyGitHubAuth","RouteEtaView","now","intervalMs","moment","locale","setNow","timer","setInterval","clearInterval","useMoment","transformedData","request","eta","etaData","targetStop","target","rs","toString","onRemoveClicked","length","Typography","display","idx","Box","flexGrow","from","Chip","format","routeConfig","path","component","pasteKey","useParams","gistFileName","setGistFileName","config","setConfig","configQuery","useQuery","fetch","query","json","Object","entries","files","JSON","parse","content","routeEtaQueryFn","list","routeEtaQuery","useQueries","queryKey","queryFn","q","refetchInterval","cacheTime","routeQuery","stopQuery","routeStopQuery","stopDictionary","result","forEach","handleRemoveClicked","newConfig","type","version","generated_timestamp","toDate","method","headers","body","stringify","description","handleAdd","ok","Grid","container","spacing","item","xs","xl","md","LayoutView","anchorEl","setAnchorEl","handleClose","changeLanguage","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","AppBar","position","Toolbar","edge","currentTarget","e","placeholder","width","App","basename","process","Container","maxWidth","paddingTop","renderRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","defaultOptions","darkTheme","createTheme","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.74eaa9b9.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\n// the translations\r\n// (tip move them in a JSON file and import them,\r\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\r\nconst resources = {\r\n  en: {\r\n    translation: {\r\n      \"Welcome to React\": \"Welcome to React and react-i18next\",\r\n      \"add_route\":\"Add Route\",\r\n      \"route_not_available\":\"Route not available\", \r\n    }\r\n  },\r\n  \"zh-HK\": {\r\n    translation: {\r\n      \"Welcome to React\": \"Bienvenue à React et react-i18next\",\r\n      \"add_route\":\"新增路線\",\r\n      \"route_not_available\":\"未有可用班次\", \r\n    }\r\n  },\r\n  \"zh-CN\": {\r\n    translation: {\r\n      \"Welcome to React\": \"Bienvenue à React et react-i18next\",\r\n      \"add_route\":\"新增路線\",\r\n      \"route_not_available\":\"未有可用班次\", \r\n    }\r\n  }\r\n};\r\n\r\ni18n\r\n// detect user language\r\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n.use(LanguageDetector)\r\n// pass the i18n instance to react-i18next.\r\n.use(initReactI18next)\r\n  .init({\r\n    resources,\r\n    fallbackLng: \"en\", // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\r\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\r\n    // if you're using a language detector, do not define the lng option\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n\r\n  export default i18n;","import * as React from 'react';\r\nimport { Box, Button, Card, CardContent, CardHeader, Chip, createStyles, IconButton, makeStyles, TextField, TextFieldProps, Theme, Typography, useTheme } from '@material-ui/core';\r\nimport moment, { now } from 'moment';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { RouteData } from '../../fetcher/model';\r\nimport { RouteStopData } from '../../fetcher/model/RouteStopData';\r\nimport { StopData } from '../../fetcher/model/StopData';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { SubScribedRouteStopData } from '../../fetcher/model/SubscribedRouteStopData';\r\nimport i18n from '../../i18n/i18n';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { dir } from 'console';\r\n\r\nexport interface AddRouteProps{\r\n    routes: RouteData[],\r\n    data: SubScribedRouteStopData[],\r\n    stops: StopData[],\r\n    routeStops: RouteStopData[],\r\n    onRouteAdded: (newData: SubScribedRouteStopData)=>Promise<boolean>\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  }));\r\nfunction onlyUnique(value: any, index: number , self: any[]) {\r\n    return self.indexOf(value) === index;\r\n}\r\n\r\nconst getLocaleStopName = (stop: StopData | undefined, lang: string) => {\r\n  if (lang === \"zh-HK\")\r\n      return stop?.name_tc;\r\n  if (lang === \"zh-CN\")\r\n      return stop?.name_sc;\r\n\r\n  return stop?.name_en;\r\n}\r\nexport const AddRouteView =(props: AddRouteProps )=>{\r\n    const {data, stops, routeStops, routes} = props;\r\n    const { t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [addMode, setAddMode]=React.useState(false);\r\n    const [route, setRoute]=React.useState<string>(\"\");\r\n    const [serviceType, setServiceType]=React.useState(\"\");\r\n    const [direction, setDirection]=React.useState(\"\");\r\n    const [seq, setSeq]=React.useState(\"\");\r\n    \r\n    const routeStopList = React.useMemo(()=>{\r\n      return {\r\n        \"I\": routeStops.filter(it=>it.route===route &&it.bound===\"I\" && it.service_type===serviceType).sort((a,b)=> (+b.seq) -(+a.seq) ),\r\n        \"O\": routeStops.filter(it=>it.route===route &&it.bound===\"O\"&& it.service_type===serviceType).sort((a,b)=> (+b.seq) -(+a.seq) )\r\n      }\r\n    }, [routeStops, route, serviceType]);\r\n\r\n    React.useEffect(()=>{\r\n      setServiceType(\"\");\r\n      setDirection(\"\");\r\n      setSeq(\"\");\r\n    }, [route]);\r\n    React.useEffect(()=>{\r\n      setDirection(\"\");\r\n      setSeq(\"\");\r\n    }, [serviceType]);\r\n    React.useEffect(()=>{\r\n      setSeq(\"\");\r\n    }, [direction]);\r\n    React.useEffect(()=>{\r\n\r\n    }, [seq]);\r\n\r\n    const handleSubmit =async ()=>{\r\n  if( await props.onRouteAdded({\r\n        routeNumber: route,\r\n        service_type: serviceType,\r\n        direction: direction,\r\n        seq: +seq,\r\n      } as SubScribedRouteStopData)){\r\n\r\n        setRoute(\"\");\r\n        setAddMode(false);\r\n      }\r\n    }\r\n    return <>\r\n    {addMode?\r\n    <Card >\r\n        <CardHeader \r\n        title={t(\"add_route\")}\r\n        action={<IconButton onClick={()=>setAddMode(false)}>\r\n          <CloseIcon/>\r\n          </IconButton>}\r\n          >\r\n        </CardHeader>\r\n        <CardContent>\r\n        <Autocomplete\r\n        value={route}\r\n        onChange={(event: any, newValue: string | null) => {\r\n          setRoute(newValue??\"\");\r\n        }}\r\n  options={routes.map(it=>it.route).filter(onlyUnique)}\r\n  getOptionLabel={(it) => it}\r\n  renderInput={(params: JSX.IntrinsicAttributes & TextFieldProps) => <TextField \r\n  {...params} label={t('route')} variant=\"outlined\" fullWidth />}\r\n/>\r\n{route&&\r\n        <Autocomplete\r\n        value={serviceType}\r\n        onChange={(event: any, newValue: string | null) => {\r\n          setServiceType(newValue??\"\");\r\n        }}\r\n  options={routes.filter(it=>it.route==route).map(it=>it.service_type).filter(onlyUnique)}\r\n  getOptionLabel={(it) => it}\r\n  renderInput={(params: JSX.IntrinsicAttributes & TextFieldProps) => <TextField \r\n  {...params} label={t('service_type')} variant=\"outlined\" fullWidth />}\r\n/>\r\n}\r\n{serviceType&&\r\n        <Autocomplete\r\n        value={direction}\r\n        onChange={(event: any, newValue: string | null) => {\r\n          setDirection(newValue??\"\");\r\n        }}\r\n  options={[\"I\", \"O\"]}\r\n  getOptionLabel={dir=>\r\n    getLocaleStopName(\r\n    stops.find(it=>it.stop===\r\n      (routeStopList[dir as (\"I\" | \"O\")] as RouteStopData[])?.find(_=>true)?.stop)\r\n    , i18n.language\r\n    ) ?? \"\"\r\n  }\r\n  renderInput={(params: JSX.IntrinsicAttributes & TextFieldProps) => <TextField \r\n  {...params} label={t('direction')} variant=\"outlined\" fullWidth />}\r\n/>\r\n}\r\n{direction&&\r\n        <Autocomplete\r\n        value={seq}\r\n        onChange={(event: any, newValue: string | null) => {\r\n          setSeq(newValue??\"\");\r\n        }}\r\n  options={routeStops.filter(it=>it.route===route &&it.bound===direction).map(it=>it.seq)}\r\n  getOptionLabel={seq=>\r\n    getLocaleStopName(\r\n      stops.find(it=>it.stop===(routeStopList[direction as (\"I\" | \"O\")] as RouteStopData[])?.find(it=>it.route===route &&it.bound===direction && it.seq===seq)?.stop)\r\n    , i18n.language) ??\"\"\r\n  }\r\n  renderInput={(params: JSX.IntrinsicAttributes & TextFieldProps) => <TextField \r\n  {...params} label={t('stop_name')} variant=\"outlined\" fullWidth />}\r\n/>\r\n}\r\n{seq&&\r\n<Button variant=\"contained\" color=\"primary\" onClick={()=>handleSubmit()}>\r\n  {t(\"addToMonitorList\")}\r\n  </Button>\r\n}\r\n        </CardContent>\r\n        </Card>\r\n        :<Card>\r\n\r\n<CardContent style={{alignContent:\"center\", alignItems:\"center\"}}>\r\n            <IconButton onClick={()=>setAddMode(true)}>\r\n                <AddIcon/>\r\n                </IconButton>\r\n        </CardContent>\r\n        </Card>\r\n}\r\n     </>\r\n}","import * as React from 'react';\r\ntype LoadContextType = {\r\n    auth: string// Not sure what these are, type it appropriately\r\n    setAuth: (str:string)=>void\r\n  }\r\n  \r\nexport const LazyGitHubAuthContext = React.createContext<LoadContextType>({} as LoadContextType);\r\n\r\nexport const LazyGitHubAuthProvider = (props:{ children:  React.ReactNode}) => {\r\n  \r\n    const[auth, setAuth] = React.useState<string>(\"\");\r\n  return (\r\n    <LazyGitHubAuthContext.Provider value={{ auth, setAuth }}>\r\n      {props.children}\r\n    </LazyGitHubAuthContext.Provider>\r\n  );\r\n};\r\nexport const useLazyGitHubAuth= ()=> {\r\n  const { auth, setAuth } = React.useContext(LazyGitHubAuthContext);\r\n\r\n  return {\r\n    auth,\r\n    setAuth\r\n  };\r\n}","import { Box, Card, CardContent, CardHeader, Chip, createStyles, IconButton, makeStyles, Paper, Theme, Typography, useTheme } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport * as React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useQueries, useQuery, UseQueryOptions } from 'react-query';\r\nimport { useParams } from 'react-router';\r\nimport { GenericResponse } from '../../fetcher/model/GenericResponse';\r\nimport { RouteEtaData } from '../../fetcher/model/RouteEtaData';\r\nimport { RouteStopData } from '../../fetcher/model/RouteStopData';\r\nimport { StopData } from '../../fetcher/model/StopData';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { SubScribedRouteStopData } from '../../fetcher/model/SubscribedRouteStopData';\r\nimport { useMoment } from '../../hooks/MomentHook';\r\n\r\nexport interface RouteEtaViewProps {\r\n    data: {\r\n        request: SubScribedRouteStopData,\r\n        eta: RouteEtaData[],\r\n    }\r\n    stops: { [key: string]: StopData },\r\n    routeStops: RouteStopData[],\r\n    onRemoveClicked: (item: SubScribedRouteStopData) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n}));\r\n\r\n\r\nexport const RouteEtaView = (props: RouteEtaViewProps) => {\r\n    const { data, stops, routeStops } = props;\r\n    const { t, i18n } = useTranslation();\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { now } = useMoment();\r\n\r\n    const transformedData = React.useMemo(() => {\r\n        var target = data?.request;\r\n        return data?.eta?.map(it => ({\r\n            etaData: it,\r\n        }))\r\n    }, [data])\r\n    const targetStop = React.useMemo(() => {\r\n        if (data && stops && routeStops) {\r\n            var target = data?.request;\r\n            return stops[\r\n                routeStops\r\n                    .find(rs => rs.route === target?.routeNumber && rs.bound === target?.direction && rs.seq === target?.seq?.toString())?.stop ?? \"\"\r\n            ]\r\n        }\r\n        return null;\r\n    }, [data, stops, routeStops])\r\n\r\n    const getLocaleStopName = (stop: StopData | undefined | null, lang: string) => {\r\n        if (lang === \"zh-HK\")\r\n            return stop?.name_tc;\r\n        if (lang === \"zh-CN\")\r\n            return stop?.name_sc;\r\n\r\n        return stop?.name_en;\r\n    }\r\n\r\n\r\n    return <>\r\n        <Card >\r\n            <CardHeader\r\n                title={data?.request?.routeNumber + \" - \" + getLocaleStopName(targetStop, i18n.language)}\r\n\r\n                action={\r\n                    <IconButton aria-label=\"delete\"\r\n                        onClick={() => props.onRemoveClicked(data?.request)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                }\r\n            >\r\n\r\n            </CardHeader>\r\n            <CardContent>\r\n\r\n                {(transformedData == null || transformedData.length <= 0) &&\r\n                    <Typography variant={\"h2\"} display=\"inline\">\r\n                        {t(\"route_not_available\")}\r\n                    </Typography>\r\n                }\r\n                {transformedData?.map((it, idx) => <>\r\n                    <Box display=\"flex\" key={\"etaRow\" + idx}>\r\n                        <Box flexGrow={1}>\r\n                            {it.etaData.eta == null ?\r\n                                <Typography variant={idx === 0 ? \"h2\" : idx === 1 ? \"h5\" : \"h6\"} display=\"inline\">\r\n                                    {t(\"route_not_available\")}\r\n                                </Typography>\r\n                                : <>\r\n                                    <Typography variant={idx === 0 ? \"h2\" : idx === 1 ? \"h5\" : \"h6\"} display=\"inline\">\r\n                                        {moment(it.etaData.eta)?.locale(i18n.language)?.from(now)}\r\n                                    </Typography>\r\n                                    <Chip label={moment(it.etaData.eta)?.format(\"HH:mm\")} />\r\n                                </>}\r\n                        </Box>\r\n                        <Box>\r\n                        </Box>\r\n                    </Box>\r\n                </>\r\n                )}\r\n            </CardContent>\r\n        </Card>\r\n    </>\r\n}","import moment from 'moment';\r\nimport * as React from 'react';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/zh-hk';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const useMoment = (intervalMs:number = 1000 ) => {\r\n    const { t, i18n } = useTranslation();\r\n    const [now, setNow] = React.useState(moment().locale(i18n.language)); // Save the current date to be able to trigger an update\r\n  \r\n    React.useEffect(() => {\r\n        const timer = setInterval(() => { // Creates an interval which will update the current data every minute\r\n        // This will trigger a rerender every component that uses the useDate hook.\r\n        setNow(moment().locale(i18n.language));\r\n      },  intervalMs);\r\n      return () => {\r\n        clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\r\n      }\r\n    }, [intervalMs]);\r\n  \r\n    return {\r\n      now: now\r\n    };\r\n  };","import { createStyles, Grid, makeStyles, Theme, useTheme } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport * as React from 'react';\r\nimport { useQueries, useQuery, UseQueryOptions } from 'react-query';\r\nimport { useParams } from 'react-router';\r\nimport { GenericResponse } from '../../fetcher/model/GenericResponse';\r\nimport { RouteData } from '../../fetcher/model/RouteData';\r\nimport { RouteEtaData } from '../../fetcher/model/RouteEtaData';\r\nimport { RouteStopData } from '../../fetcher/model/RouteStopData';\r\nimport { StopData } from '../../fetcher/model/StopData';\r\nimport { SubScribedRouteStopData } from '../../fetcher/model/SubscribedRouteStopData';\r\nimport { useLazyGitHubAuth } from '../../hooks/LazyGitHubAuthHook';\r\nimport { AddRouteView } from './AddRouteView';\r\nimport { RouteEtaView } from './RouteEtaView';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n}));\r\n\r\n\r\nexport const HomeView = () => {\r\n    const { pasteKey } = useParams<{ pasteKey: string }>()\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { auth, setAuth } = useLazyGitHubAuth();\r\n    const [gistFileName, setGistFileName] = React.useState<string>(\"\");\r\n    const [config, setConfig] = React.useState<GenericResponse<SubScribedRouteStopData[]> | null>(null);\r\n\r\n    const configQuery = useQuery([\"gist\", pasteKey], async () => {\r\n        var query = await fetch(`https://api.github.com/gists/${pasteKey}`, {\r\n        });\r\n        var data = (await query.json()) as any;// as GenericResponse<SubScribedRouteStopData[]>;\r\n        setGistFileName((Object.entries(data.files).find(_ => true) as any)[0]);\r\n        return JSON.parse((Object.entries(data.files).find(_ => true) as any)[1].content) as GenericResponse<SubScribedRouteStopData[]>;\r\n    }, {\r\n    })\r\n\r\n    const routeEtaQueryFn = async (it: SubScribedRouteStopData) => {\r\n        var query = await fetch(`https://data.etabus.gov.hk/v1/transport/kmb/route-eta/${it.routeNumber}/${it.service_type}`);\r\n        var list = await query.json() as GenericResponse<RouteEtaData[]>;\r\n        return list.data.filter(stop => stop.dir === it.direction && stop.seq === it.seq) as RouteEtaData[];\r\n    };\r\n\r\n    const routeEtaQuery = useQueries(\r\n        config?.data?.map(it => (\r\n            {\r\n                queryKey: [\"routeEta\", it.routeNumber,it.service_type, it.direction, it.seq],\r\n                queryFn: async (q) => ({ request: it, eta: await routeEtaQueryFn(it) }),\r\n                refetchInterval: 10000,\r\n                cacheTime: 0\r\n            } as UseQueryOptions)) ?? []\r\n    )\r\n    const routeQuery = useQuery(\"routes\", async () => {\r\n        var query = await fetch(\"https://data.etabus.gov.hk/v1/transport/kmb/route/\");\r\n        return await query.json() as GenericResponse<RouteData[]>;\r\n    }, {\r\n        refetchInterval: 86400000,\r\n        cacheTime: 86400000\r\n    })\r\n    const stopQuery = useQuery(\"stops\", async () => {\r\n        var query = await fetch(\"https://data.etabus.gov.hk/v1/transport/kmb/stop\");\r\n        return await query.json() as GenericResponse<StopData[]>;\r\n    }, {\r\n        refetchInterval: 86400000,\r\n        cacheTime: 86400000\r\n    })\r\n\r\n    const routeStopQuery = useQuery(\"routeStops\", async () => {\r\n        var query = await fetch(\"https://data.etabus.gov.hk/v1/transport/kmb/route-stop\");\r\n        return await query.json() as GenericResponse<RouteStopData[]>;\r\n    }, {\r\n        refetchInterval: 86400000,\r\n        cacheTime: 86400000\r\n    })\r\n\r\n    const stopDictionary = React.useMemo<{[key:string]:StopData }>(() => {\r\n        var result ={} as {[key:string]: StopData};\r\n        if(stopQuery.data ){\r\n            stopQuery.data.data.forEach(it=>{\r\n                result[it.stop] = it;\r\n            })\r\n        }\r\n        return result;\r\n    }, [stopQuery.data])\r\n\r\n    React.useEffect(()=>{\r\n        if(configQuery.data){\r\n            setConfig(configQuery.data)\r\n        }\r\n    },[configQuery.data])\r\n\r\n    const handleRemoveClicked = async (data: SubScribedRouteStopData) => {\r\n        var newConfig = {\r\n            type: \"subscribedRouteStop\",\r\n            version: \"1.0\",\r\n            generated_timestamp: moment().toDate(),\r\n            data: config?.data?.filter(it => it !== data) ?? [] as SubScribedRouteStopData[]\r\n        } as GenericResponse<SubScribedRouteStopData[]>;\r\n        var query = await fetch(`https://api.github.com/gists/${pasteKey}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Authorization': 'token ' + auth,\r\n                'Content-Type': 'application/vnd.github.v3.text+json'\r\n            },\r\n            body: JSON.stringify({\r\n                description: \"Edit gist\",\r\n                files: {\r\n                    [gistFileName]: {\r\n                        content: JSON.stringify(newConfig, null, 2)\r\n                    }\r\n                }\r\n            }, null, 2)\r\n        });\r\n        setConfig(newConfig);\r\n        //configQuery.refetch();\r\n    }\r\n\r\n    const handleAdd =async (data:SubScribedRouteStopData): Promise<boolean>=>{\r\n        var newConfig = {\r\n            type: \"subscribedRouteStop\",\r\n            version: \"1.0\",\r\n            generated_timestamp: moment().toDate(),\r\n            data: [...config?.data ?? [], data ] as SubScribedRouteStopData[]\r\n        } as GenericResponse<SubScribedRouteStopData[]>;\r\n        var query = await fetch(`https://api.github.com/gists/${pasteKey}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Authorization': 'token ' + auth,\r\n                'Content-Type': 'application/vnd.github.v3.text+json'\r\n            },\r\n            body: JSON.stringify({\r\n                description: \"Edit gist\",\r\n                files: {\r\n                    [gistFileName]: {\r\n                        content: JSON.stringify(newConfig, null, 2)\r\n                    }\r\n                }\r\n            }, null, 2)\r\n        });\r\n        setConfig(newConfig);\r\n        return query.ok;\r\n      }\r\n    return <>\r\n        {pasteKey == null ?\r\n            <Grid container spacing={2}></Grid>\r\n            :\r\n            <Grid container spacing={2}>\r\n\r\n                {\r\n                    routeEtaQuery\r\n                        ?.map((it, idx) =>\r\n                            <Grid item xs={12} xl={4} md={6} key={\"eta\" + idx}>\r\n                                <RouteEtaView\r\n                                    onRemoveClicked={(it)=>handleRemoveClicked(it)}\r\n                                    stops={stopDictionary ?? {}}\r\n                                    data={it.data as any}\r\n                                    routeStops={routeStopQuery.data?.data ?? []} />\r\n                            </Grid>\r\n                        )}\r\n\r\n\r\n                <Grid item xs={12} xl={4} md={6}>\r\n                    <AddRouteView\r\n                        onRouteAdded={data => handleAdd(data)}\r\n                        stops={stopQuery.data?.data ?? []}\r\n                        data={configQuery.data?.data ?? []}\r\n                        routes={routeQuery.data?.data ?? []}\r\n                        routeStops={routeStopQuery.data?.data ?? []} />\r\n\r\n                </Grid>\r\n            </Grid>\r\n        }\r\n    </>\r\n}","import * as React from 'react';\r\nimport { RouteConfig } from 'react-router-config';\r\nimport App from '../App';\r\nimport { HomeView } from '../functions';\r\n\r\nconst routeConfig: RouteConfig[] = [\r\n    {\r\n        path: '/:pasteKey?',\r\n        component: HomeView,\r\n        routes: [\r\n        ]\r\n    }\r\n]\r\n\r\nexport default routeConfig;","import { AppBar, Toolbar, IconButton, Typography, Button, Menu, MenuItem, TextField } from '@material-ui/core';\r\nimport { classes } from 'istanbul-lib-coverage';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport * as React from 'react';\r\nimport { MouseEventHandler } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport moment from 'moment';\r\nimport { useLazyGitHubAuth } from '../hooks/LazyGitHubAuthHook';\r\n\r\nexport const LayoutView =(props:{ children: React.ReactNode})=>{\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const { t, i18n } = useTranslation();\r\n    const {auth, setAuth} = useLazyGitHubAuth();\r\n  \r\n  \r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = async (locale:string|null) => {\r\n        setAnchorEl(null);\r\n        if(!locale)\r\n            return;\r\n        await i18n.changeLanguage(locale);\r\n        moment.locale(locale)\r\n      };\r\n  \r\n    return <>\r\n    <Menu\r\n  id=\"simple-menu\"\r\n  anchorEl={anchorEl}\r\n  keepMounted\r\n  open={Boolean(anchorEl)}\r\n  onClose={()=>handleClose(null)}\r\n>\r\n  <MenuItem onClick={()=>handleClose(\"en\")}>English</MenuItem>\r\n  <MenuItem onClick={()=>handleClose(\"zh-CN\")}>簡體中文</MenuItem>\r\n  <MenuItem onClick={()=>handleClose(\"zh-HK\")}>正體中文</MenuItem>\r\n</Menu>\r\n    <AppBar position=\"static\">\r\n  <Toolbar>\r\n    <IconButton edge=\"end\"  color=\"inherit\" aria-label=\"language\" onClick={handleClick}>\r\n      <LanguageIcon />\r\n    </IconButton>\r\n    <TextField value={auth} \r\n    onChange={e=>setAuth(e.target.value)} \r\n    placeholder=\"GitHub Token\"\r\n    style={{width: 500}}/>\r\n  </Toolbar>\r\n</AppBar>\r\n\r\n{props.children}\r\n</>\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './i18n';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport routeConfig from './global/Routes';\r\nimport { renderRoutes, RouteConfig } from 'react-router-config';\r\nimport { Container, createTheme, useTheme } from '@material-ui/core';\r\nimport { LayoutView } from './functions/LayoutView';\r\n//https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react-router-config/react-router-config-tests.tsx\r\nconst App = ()=> {\r\n  const theme = useTheme();\r\n  return (\r\n    <>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <LayoutView>\r\n\r\n          <Container maxWidth=\"xl\" style={{paddingTop:theme.spacing(2)}}>\r\n                  \r\n            {\r\n            renderRoutes(routeConfig)\r\n          }\r\n          </Container>\r\n          </LayoutView>\r\n    </Switch>\r\n    </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { createTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\r\nimport { LazyGitHubAuthProvider } from './hooks/LazyGitHubAuthHook';\r\n\r\nconst queryClient = new QueryClient({\r\n  defaultOptions:{\r\n  }\r\n})\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <ThemeProvider theme={darkTheme}>\r\n      <CssBaseline/>\r\n      <LazyGitHubAuthProvider>\r\n    <QueryClientProvider  client={queryClient}>\r\n          <App />\r\n    </QueryClientProvider>\r\n    </LazyGitHubAuthProvider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}